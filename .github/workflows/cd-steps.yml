name: CD

on:
  workflow_call:
    inputs:
      ROLE_ARN:
        required: true
        type: string
      AWS_REGION:
        type: string
        default: 'eu-central-1'
      AWS_ACCOUNT_NUMBER:
        required: true
        type: string

jobs:
  tf-plan:
    runs-on: ubuntu-latest 

    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Git Clone Repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.ROLE_ARN }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -no-color -out=tfplan

    - name: Upload Terraform Plan for Approval
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: tfplan

  tf-apply:
    runs-on: ubuntu-latest

    needs: tf-plan

    defaults:
      run:
        working-directory: ./terraform
  
    environment:
      name: dev
      
    steps:
    - name: Git Clone Repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.ROLE_ARN }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Download Terraform Plan for Approval
      uses: actions/download-artifact@v4
      with:
        name: tfplan
        path: tfplan

    - name: Apply Terraform Plan
      run: terraform apply tfplan