name: CI

on:
  workflow_call:
    inputs:
      ROLE_ARN:
        required: true
        type: string
      AWS_REGION:
        type: string
        default: 'eu-central-1'
      IMAGE_REPO:
        type: string
        default: 'bz-app'
      AWS_ACCOUNT_NUMBER:
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Git Clone Repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.ROLE_ARN }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker Image
      run: |
        docker build . -t ${{ inputs.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.IMAGE_REPO }}:${GITHUB_SHA::7}

    - name: Push Docker Image to Amazon ECR
      if: github.ref == 'refs/heads/main'
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker push ${{ inputs.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.IMAGE_REPO }}:${GITHUB_SHA::7}

  tf-fmt-and-validate:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
    - name: Git Clone Repository
      uses: actions/checkout@v4

    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate -no-color